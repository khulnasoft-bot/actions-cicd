name: ML Workflow Via Actions
on:
  workflow_dispatch:
  pull_request:
    types: [labeled]

jobs:
  ml-workflow:
    if: github.actor == 'khulnasoft-bot'
    runs-on: ubuntu-latest
    steps:
      - name: Copy Repository Contents
        uses: actions/checkout@master

      - name: Trigger on PR Label
        id: label
        run: python action_files/validate_payload.py
        env:
          TRIGGER_LABEL_NAME: "Full Test Pending"

      - name: Publish CPU Image to DockerHub
        if: steps.label.outputs.TRIGGERED == 'true'
        run: |
          cd $GITHUB_WORKSPACE
          echo ${PASSWORD} | docker login -u $USERNAME --password-stdin
          BASE_NAME="$USERNAME/ml-cicd"
          IMAGE_NAME="$BASE_NAME:$GITHUB_SHA"
          docker pull $BASE_NAME || true
          docker build --cache-from $BASE_NAME -t $IMAGE_NAME -t $BASE_NAME -f docker/Dockerfile .
          docker push $IMAGE_NAME
          docker push $BASE_NAME
        env:
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish GPU Image to DockerHub
        if: steps.label.outputs.TRIGGERED == 'true'
        run: |
          cd $GITHUB_WORKSPACE
          echo ${PASSWORD} | docker login -u $USERNAME --password-stdin
          BASE_NAME="$USERNAME/ml-cicd-gpu"
          IMAGE_NAME="$BASE_NAME:$GITHUB_SHA"
          docker pull $BASE_NAME || true
          docker build --cache-from $BASE_NAME -t $IMAGE_NAME -t $BASE_NAME -f docker/Dockerfile .
          docker push $IMAGE_NAME
          docker push $BASE_NAME
        env:
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Argo Param File
        if: steps.label.outputs.TRIGGERED == 'true'
        run: |
          cd $GITHUB_WORKSPACE
          echo "GITHUB-SHA: $SHA" >> pipelines/params.yaml
          echo "PR-NUMBER: $PR_NUMBER" >> pipelines/params.yaml
          echo "REPO: $GITHUB_REPOSITORY" >> pipelines/params.yaml
        env:
          SHA: ${{ steps.label.outputs.HEAD_SHA }}
          PR_NUMBER: ${{ steps.label.outputs.ISSUE_NUMBER }}

      - name: Submit Argo Deployment
        if: steps.label.outputs.TRIGGERED == 'true'
        id: argo
        uses: khulnasoft-bot/gke-argo@master
        with:
          ARGO_URL: ${{ secrets.ARGO_URI }}
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
          LOCATION_ZONE: "us-west1-a"
          CLUSTER_NAME: "github-actions-demo"
          WORKFLOW_YAML_PATH: "pipelines/workflow.yaml" # the argo workflow file relative to the repo's root.
          PARAMETER_FILE_PATH: "pipelines/params.yaml" # optional parameter file.
          SHA: ${{ steps.label.outputs.HEAD_SHA }}

      - name: Create Check
        if: steps.label.outputs.TRIGGERED == 'true'
        run: |
          python3 action_files/create_check_run.py "in_progress" "Argo-Workflow" "ML Workflow For SHA $SHA" "Links [Argo Workflow]($ARGO_LINK) | [W&B Project](https://app.wandb.ai/$WANDB_ENTITY/$WANDB_PROJECT) | Docker: [khulnasoft/ml-cicd](https://cloud.docker.com/u/khulnasoft/repository/docker/khulnasoft/ml-cicd), [khulnasoft/ml-cicd-gpu](https://cloud.docker.com/u/khulnasoft/repository/docker/khulnasoft/ml-cicd-gpu)" " "
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARGO_LINK: ${{ steps.argo.outputs.WORKFLOW_URL }}
          WANDB_ENTITY: ${{ secrets.WANDB_ENTITY }}
          WANDB_PROJECT: ${{ secrets.WANDB_PROJECT }}
          SHA: ${{ steps.label.outputs.HEAD_SHA }}

      - name: Comment With Metadata
        if: steps.label.outputs.TRIGGERED == 'true'
        run: |
          bash action_files/pr_comment.sh "### [ML Workflow]($ARGO_LINK) For SHA $SHA has been instantiated.\n\nThe following Docker images were built and tagged with the SHA: \n - [khulnasoft/ml-cicd](https://cloud.docker.com/u/khulnasoft/repository/docker/khulnasoft/ml-cicd)\n - [khulnasoft/ml-cicd-gpu](https://cloud.docker.com/u/khulnasoft/repository/docker/khulnasoft/ml-cicd-gpu)\n\nCheck run \`Argo-Workflow\` created, with status pending completion of the workflow."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARGO_LINK: ${{ steps.argo.outputs.WORKFLOW_URL }}
          WANDB_ENTITY: ${{ secrets.WANDB_ENTITY }}
          WANDB_PROJECT: ${{ secrets.WANDB_PROJECT }}
          ISSUE_NUMBER: ${{ steps.label.outputs.ISSUE_NUMBER }}
          SHA: ${{ steps.label.outputs.HEAD_SHA }}
